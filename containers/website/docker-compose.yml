version: "3.8"

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik_proxy
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  db:
    image: mariadb:latest
    container_name: mariadb_container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: auth_db
      MYSQL_USER: user
      MYSQL_PASSWORD: userpassword
    volumes:
      - db_data:/var/lib/mysql

  mongodb:
    image: mongo:latest
    container_name: mongodb_container
    restart: always
    environment:
      MONGO_INITDB_DATABASE: auth_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  app:
    build: ./frontend
    container_name: express_app
    restart: always
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_USER: user
      DB_PASSWORD: userpassword
      DB_NAME: auth_db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=PathPrefix(`/`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=3000"
    volumes:
      - ./frontend:/app
    command: ["node", "server.js"]

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    depends_on:
      - app
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=PathPrefix(`/`)"
      - "traefik.http.routers.nginx.entrypoints=web"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"

volumes:
  db_data:
  mongodb_data:
